---
title: "rstan_fitting_428"
format: html
---

```{r}
library(tidyverse)
library(here)
library(rstan)
library(posterior)
library(bayesplot)

options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)

color_scheme_set("brightblue")
```

```{r}
path_to_csv <- here("data_raw/428_ra236.530_dec-46.922_4U1543TraPDB_andersson.csv")
data_df <- read_csv(path_to_csv, show_col_types = FALSE)

data_df |> 
  ggplot() +
  aes(x = mjd, y = f_peak) +
  geom_point() +
  theme_bw()
```

```{stan, cache=TRUE, output.var = "marginal_model"}
data {
  int<lower=1> N;
  array[N] real x;
  vector[N] y;
}
transformed data {
  vector[N] mu = rep_vector(0, N);
}
parameters {
  real<lower=0> ell;
  real<lower=0> eta;
  real<lower=0> sigma;
}
model {
  matrix[N, N] K = gp_exp_quad_cov(x, eta, ell);
  matrix[N, N] L = cholesky_decompose(add_diag(K, sigma^2));

  ell ~ inv_gamma(5, 5);
  eta ~ std_normal();
  sigma ~ std_normal();

  y ~ multi_normal_cholesky(mu, L);
}
```

```{r}
x_star <- seq(from = min(data_df$mjd), to = max(data_df$mjd), length.out = 100)

# names correspond to the data block in the Stan program
data_list <- list(N = length(data_df$mjd), 
                  x = data_df$mjd,
                  y = data_df$f_peak)
```

```{r}
fit <- sampling(object = marginal_model,
                data = data_list,
                seed = 123,
                chains = 4,
                refresh = 500)
```

```{r}
pairs(fit, pars = c("eta", "ell","sigma"))
```

```{r}
mcmc_hist(fit, pars = c("eta", "ell","sigma"))
```

```{r}
fit
```


